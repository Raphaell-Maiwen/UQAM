/**
 * I N F 1 1 2 0   -   g r o u p e   4 1   -   Automne 2015
 *
 * TP3 - partie 1
 * 
 * Nom : Raphaelle Marcotte-Poulin
 * Code permanent : MARR06559609
 * Courriel : raphaelle.mp@gmail.com
 * 
 * Nom : Philippe Blanchette
 * Code permanent : blap15029001
 * Courriel : pblanchette44@hotmail.com
 * 
 * Chaque vehicule possede les caracteristiques suivantes :
 * 
 * La categorie de vehicule (0 = inconnue, 1 = terrestre, 2 = aquatique, 3 = aerien, 4 = amphibie. 
 * La valeur par defaut est 1)
 * 
 * Une description (cha�ne de caracteres non nulle. La valeur pas defaut est la cha�ne vide)
 * 
 * Des informations sur le vendeur du vehicule (cha�ne de caracteres non nulle. 
 * La valeur pas defaut est ��Non disponible��)
 * 
 * Le prix demande (un nombre reel non negatif. Le prix par defaut est 2999.99$)
 * 
 * Est vendu ? (un booleen. La valeur par defaut est false.)
 * 
 * Un numero unique d'identification distinct pour chaque vehicule 
 * (nombre entier positif superieur ou egal a 1). Le numero doit etre genere automatiquement lors 
 * de la creation du vehicule. Les numeros sont consecutifs et debutent a 1. Le numero d'un vehicule 
 * ne doit PAS etre modifie une fois qu'il a ete attribue.* 
 * 
 */

public class Vehicule {

    private static final String[] CATEGORIES = { "non-classifie", "terrestre", "aquatique", "aerien", "amphibie" };
    
    public static final int MIN_CATEGORIE = 0;
    public static final int MAX_CATEGORIE = CATEGORIES.length - 1;
    
    public static final double PRIX_MIN = 0.0;
    
    public static final int CATEGORIE_DEFAUT = 1;
     
    public static final String DESCRIP_DEFAUT = "";
    public static final String VENDEUR_DEFAUT = "Non disponible";
    public static final boolean VENDU_DEFAUT = false;
    public static final double PRIX_DEFAUT = 2999.99;

    ///////////////////////////////////////////////////////////////////////////////////////
    //                               Methode utilitaire de CLASSE                        //
    ///////////////////////////////////////////////////////////////////////////////////////
    
    
   /******************************************************************************
    * Retourne la chaine de caracteres correspondant a une categorie recu en
    * parametre. Si le parametre ne correspond pas a une categorie existante, 
    * la methode retourne la chaine vide ("").
    ******************************************************************************/
     public static String categorie (int cat) {
         if(cat < MIN_CATEGORIE || cat > MAX_CATEGORIE){
             return "";
         }
         else{
             return CATEGORIES[cat];
         }
     }
    
    
    /**
     *  Cree un vehicule non vendu, ayant les caracteristiques recues en parametre.
     *  Si la categorie ou le prix ne sont pas parmi les valeurs permises, 
     *  la valeur par defaut est attribuee a l'attribut correspondant.
     *  La description et le vendeur du vehicule sont mis aux valeurs par defaut.
     *  Le numero de vehicule est attribue automatiqument lors de la creation.
     */
    public Vehicule ( int categorie, double prix) {
        this(categorie, DESCRIP_DEFAUT, VENDEUR_DEFAUT, prix); //Étant donné qu'il manque deux paramètres à la fonction, on appelle l'autre fonction en donnant la description
                                                                //et le vendeur par défaut. 
    } // Vehicule
    
    /**
     *  Cree un vehicule non vendu et ayant les caracteristiques recues en parametre.
     *  Si la description, la categorie, le vendeur ou le prix ne sont pas parmi les 
     *  valeurs permises, la valeur par defaut est attribuee a l'attribut correspondant.
     *  Le numero de vehicule est attribue automatiqument lors de la creation.
     */
    public Vehicule ( int categorie, String description, String vendeur, double prix ) {
        if(categorie < MIN_CATEGORIE || categorie > MAX_CATEGORIE){
             this.categorie = CATEGORIE_DEFAUT;
        }
        else{
            this.categorie = categorie;
        }
        
        if(description == null){
            this.description = DESCRIP_DEFAUT;
        }
        else{
            this.description = description;
        }
        
        if(vendeur == null){
            this.vendeur = VENDEUR_DEFAUT;
        }
        else{
            this.vendeur = vendeur;
        }
        
        if(prix < PRIX_MIN){
            this.prix = PRIX_DEFAUT;
        }
        else{
            this.prix = prix;
        }
        
        this.vendu = VENDU_DEFAUT;
        
        numeroId = numeroId + 1; //On augmentente le numéro d'identificaiton. Puisqu'il est généré à 0, le premier nombre sera 0 + 1 = 1.
                                 //Les suivants seront tous incrémentés de 1 (donc 2, 3, 4, 5 6). 
        this.numeroIdentification = numeroId; //On donne à l'objet Véhicule la caractéristique numeroIdentification qui a comme valeur numeroId. 
                                                //On l'augmente AVANT de l'attribuer (sinon le premier numéro d'identification serait 0, et non 1).
    } // Vehicule
    
    
    
    // Observateurs (getters) d'instance

    public double getPrix(){
        return prix;
    }
   
    public int getCategorie(){
        return categorie;
    }
    
    public String getDescription(){
        return description;
    }
    
    public String getVendeur(){
        return vendeur;
    }
    
    public boolean getVendu(){
        return vendu;
    }
    
    public int getNumeroIdentification(){
        return numeroIdentification;
    }
    
    // Modificateurs (setters)
    
    //Il n'y a pas de setters pour le numero d'identification car il est unique et ne doit pas pouvoir être modifie.
    /**
     * Modifie le prix demande
     * Si le prix en parametre ne fait pas partie des valeurs permises,
     * aucune modification n'est effectuee et aucun message 
     * d'erreur ne sera affiche.
     */
    public void setPrix ( double p ) {
        if(p >= PRIX_MIN){
            prix = p;
        }
    } 
    
     /**
     * Modifie la categorie du vehicule
     * Si la categorie recue en parametres n'est pas parmi
     * les valeurs permises, aucune modification n'est 
     * effectuee et aucun message d'erreur ne sera affiche.
     */
    public void setCategorie ( int cat ) {
        if(cat >= MIN_CATEGORIE && cat <= MAX_CATEGORIE){
            categorie = cat;
        }
    }
    
     /**
     * Modifie la description du vehicule
     * Si la description en parametre est null, aucune modification
     * n'est effectuee et aucun message d'erreur ne sera affiche.
     */
    public void setDescription ( String desc ) {
        if(desc != null){
            description = desc;
        }
    } 
    
     /**
     * Modifie le vendeur du vehicule
     * Si le vendeur en parametre est null, aucune modification
     * n'est effectuee et aucun message d'erreur ne sera affiche.
     */
    public void setVendeur ( String vend ) {
        if(vend != null){
            vendeur = vend;
        }
    } 
    
    /**
     * Modifie l'etat du vehicule
     */
    public void setVendu ( boolean v ) {
        vendu = v;
    } 
    
    
    
    ///////////////////////////////////////////////////////////////////////////////////////
    //                             Methode utilitaire d'instance                         //
    ///////////////////////////////////////////////////////////////////////////////////////
    
    /******************************************************************************
     * Retourne une chaine de caracteres qui correspond aux caracteristiques d'un 
     * vehicule. Chaque attribut est precede d'une courte description.
     * Pour la categorie, on doit inclure la valeur numerique ET la chaine de 
     * caracteres correspondante. 
     * Chaque attribut doit etre sur une ligne differente.
     ******************************************************************************/
    public String toString () {
       String caracteristiques = "Categorie: " + categorie + ". " + categorie(categorie); 
       caracteristiques = caracteristiques + "\nDescription: " + description;
       caracteristiques = caracteristiques + "\nVendeur: " + vendeur;
       caracteristiques = caracteristiques + "\nPrix demande: " + prix;
       caracteristiques = caracteristiques + "\nVendu?: " + vendu;
       caracteristiques = caracteristiques + "\nNumero d'identification: " + numeroIdentification;
                
       return caracteristiques;
        
    } // toString
    
     //----------   P a r t i e   p r i v e e   ----------//

    private static int numeroId = 0; //On génère le numéro d'identification.

    // variables d'instance
    private int categorie; 
    private String description;
    private String vendeur;
    private double prix;
    private boolean vendu;
    private int numeroIdentification;
    
} // Vehicule
